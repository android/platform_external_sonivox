{
  "comments": [
    {
      "key": {
        "uuid": "c0d7b707_1562e572",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-09-11T20:53:58Z",
      "side": 1,
      "message": "harish and i were talking about this a few days ago.\nI think something we discussed, but didn\u0027t reach a conclusion about, is whether\nwe should make the definitions for EAS_I32 be \"int32_t\" instead of \"long\".\nthat would drive it to 32-bits.\n\n[i forgot that long is 32/64 bits depending on architecture.... \n\nHarish -- you want to chime in here?",
      "revId": "abb48f26956d2276ee8dfbef31f9b74bc37ecdd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb07baf7_31bf64e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-09-11T21:09:02Z",
      "side": 1,
      "message": "Ray,\nNeel is trying to change the library to define EAS_U32/EAS_I32 as uint32_t/int32_t.\nBecause the library uses these datatypes to pass few pointers around, changing the datatype definitions as above isn\u0027t a trivial one.\nWhile he continues to work on making those required changes, we felt it is better to close this out to ensure that the fuzzer continues to run and doesn\u0027t stop on these overflow errors.\nChange done here now will work well on both 32bit builds and 64bit builds by using correct limits and it will still be valid as and when we change the typedefs appropriately.",
      "parentUuid": "c0d7b707_1562e572",
      "revId": "abb48f26956d2276ee8dfbef31f9b74bc37ecdd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ff8a980_4f3c20ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-09-11T21:11:45Z",
      "side": 1,
      "message": "you\u0027d mentioned the pointer/integer assumptions when we were talking; i\u0027d forgotten about that.\n\nknowing that we\u0027ve got a planned subsequent work for getting rid of vague \u0027long\u0027 in favor of the int32_t style, at least once the pointer thing is figured out, is good.",
      "parentUuid": "cb07baf7_31bf64e0",
      "revId": "abb48f26956d2276ee8dfbef31f9b74bc37ecdd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5d31812_58ad7620",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-09-11T22:17:55Z",
      "side": 1,
      "message": "Ray,\nThis is ready to be submitted.\nCan you please submit?\nThanks.",
      "revId": "abb48f26956d2276ee8dfbef31f9b74bc37ecdd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c08445d5_3199a412",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-09-11T22:30:50Z",
      "side": 1,
      "message": "need marco\u0027s approval as the only owner we have left in the group for this tree.",
      "revId": "abb48f26956d2276ee8dfbef31f9b74bc37ecdd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4cddd8a2_b38d0d64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2020-09-11T23:58:55Z",
      "side": 1,
      "message": "I\u0027m not sold on replacing the hardcoded values for EAS_I32_MAX and EAS_U32_MAX with their *actual* maximums from limits.h\n\nThe sonivox code was not written with 64-bit in mind, and so there might very will be places in the code where a ticks value that cannot be represented in 32 bits will mess things up. Wouldn\u0027t it be safer to keep the max at INT_MAX and UINT_MAX?\n\n",
      "revId": "abb48f26956d2276ee8dfbef31f9b74bc37ecdd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "924d039c_03d5b64f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-09-12T00:11:10Z",
      "side": 1,
      "message": "Marco,\nSure. \n\nNeel,\nPlease revert to patchset 1 and make the changes as suggested by Ray in first comments (i.e us 32bit max values instead of 64bit max values)",
      "parentUuid": "4cddd8a2_b38d0d64",
      "revId": "abb48f26956d2276ee8dfbef31f9b74bc37ecdd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}